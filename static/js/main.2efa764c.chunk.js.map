{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/ContactFilter/ContactFilter.js","App.js","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","ContactList","contacts","onDeleteContact","className","s","list","map","id","name","number","list__item","list__text","type","onClick","ContactForm","state","handleChange","e","console","log","target","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","this","form","form__label","form__input","pattern","title","required","onChange","button","Component","ContactFilter","App","contactList","filter","addContact","isInContacts","alert","contact","shortid","generate","prevState","toLowerCase","includes","length","deleteContact","contactId","changeFilter","getVisibleContacts","normalizedFilter","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2efa764c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3pKy1\",\"form__label\":\"ContactForm_form__label__2z82T\",\"form__input\":\"ContactForm_form__input__2-Jfw\",\"button\":\"ContactForm_button__1PDYy\"};","import React from 'react';\r\nimport s from './ContactList.module.scss';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={s.list__item}>\r\n        <span className={s.list__text}>{name}</span>\r\n        <span className={s.list__text}>{number}</span>\r\n        <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\n\r\nimport s from \"./ContactForm.module.scss\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    console.log(e.target.value); //то что вводим\r\n    console.log(e.target.name); //имя\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.form__label}>\r\n          Name\r\n          <input\r\n            className={s.form__input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label className={s.form__label}>\r\n          Phone Number:\r\n          <input\r\n            className={s.form__input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React from 'react';\r\nconst ContactFilter = ({ value, onChange }) => (\r\n  <label>\r\n    Filter\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\nexport default ContactFilter;\r\n","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\nimport contactList from \"./phonelist.json\";\r\n\r\nimport ContactList from \"./components/ContactList\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactFilter from \"./components/ContactFilter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: contactList,\r\n    filter: \"\",\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    if (this.isInContacts(name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState((prevState) => ({\r\n      contacts: [contact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  isInContacts = (name) => {\r\n    name = name.toLowerCase();\r\n    return (\r\n      this.state.contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(name)\r\n      ).length > 0\r\n    );\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  //фильтр,принятие ивента\r\n  changeFilter = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n  // метод фильтрации массива\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <ContactFilter onChange={this.changeFilter} value={filter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__33BOB\",\"list__item\":\"ContactList_list__item__2tuL9\",\"list__text\":\"ContactList_list__text__2kv3Y\"};"],"sourceRoot":""}